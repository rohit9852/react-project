{"version":3,"sources":["actions/types.js","http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","actions/tutorials.js","components/tutorialUpdate.component.js","components/tutorials-list.component.js","App.js","reducers/tutorials.js","reducers/index.js","store.js","index.js"],"names":["CREATE_TUTORIAL","RETRIEVE_TUTORIALS","UPDATE_TUTORIAL","axios","create","baseURL","headers","http","get","id","data","post","put","AddTutorial","props","onChangeTitle","bind","onChangeDescription","saveTutorial","newTutorial","onChangeUserId","state","title","body","submitted","e","this","setState","userId","target","value","description","createTutorial","then","console","log","catch","className","onClick","htmlFor","type","required","onChange","name","Component","connect","dispatch","a","TutorialDataService","res","payload","Promise","resolve","reject","Tutorial","onChangebody","getTutorial","updateStatus","updateContent","currentTutorial","published","message","match","params","prevState","response","status","updateTutorial","reponse","update","TutorialsList","refreshData","setActiveTutorial","currentIndex","searchTitle","retrieveTutorials","tutorial","index","tutorials","map","getAll","App","to","exact","path","component","initialState","tutorialReducer","action","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41a66b9c.chunk.js","sourcesContent":["export const CREATE_TUTORIAL = \"CREATE_TUTORIAL\";\nexport const RETRIEVE_TUTORIALS = \"RETRIEVE_TUTORIALS\";\nexport const UPDATE_TUTORIAL = \"UPDATE_TUTORIAL\";","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://jsonplaceholder.typicode.com\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass TutorialDataService {\n  getAll() {\n    return http.get(\"/posts\");\n  }\n\n  get(id) {\n    return http.get(`/posts/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/posts\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/posts/${id}`, data);\n  }\n}\n\nexport default new TutorialDataService();","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createTutorial } from \"../actions/tutorials\";\n\nclass AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n    this.onChangeUserId = this.onChangeUserId.bind(this);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      body: \"\",\n      submitted: false,\n    };\n  }\n\n  onChangeUserId(e) {\n    this.setState({\n      userId: e.target.value,\n    });\n  }\n\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  saveTutorial() {\n    const { userId, title, body } = this.state;\n\n    this.props\n      .createTutorial(userId, title, body)\n      .then((data) => {\n        this.setState({\n          id: data.id,\n          userId:data.userId,\n          title: data.title,\n          body: data.description,\n          submitted: true,\n        });\n        console.log(data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      id: null,\n      userId:1,\n      title: \"\",\n      body: \"\",\n      submitted: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n          <h4> create Tutorial Post</h4>\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"userId\">User Id</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"userId\"\n                required\n                value={this.state.userId}\n                onChange={this.onChangeUserId}\n                name=\"userId\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"body\"\n              />\n            </div>\n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { createTutorial })(AddTutorial);\n","import {\n  CREATE_TUTORIAL,\n  RETRIEVE_TUTORIALS,\n  UPDATE_TUTORIAL,\n} from \"./types\";\n\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport const createTutorial = (title, description) => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.create({ title, description });\n\n    dispatch({\n      type: CREATE_TUTORIAL,\n      payload: res.data,\n    });\n\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const retrieveTutorials = () => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.getAll();\n\n    dispatch({\n      type: RETRIEVE_TUTORIALS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const updateTutorial = (id, data) => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.update(id, data);\n\n    dispatch({\n      type: UPDATE_TUTORIAL,\n      payload: data,\n    });\n\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTutorial } from \"../actions/tutorials\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nclass Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangebody = this.onChangebody.bind(this);\n    this.getTutorial = this.getTutorial.bind(this);\n    this.updateStatus = this.updateStatus.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n\n    this.state = {\n      currentTutorial: {\n        id: null,\n        userId:1,\n        title: \"\",\n        body: \"\",\n        published: false,\n      },\n      message: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getTutorial(this.props.match.params.id);\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          title: title,\n        },\n      };\n    });\n  }\n\n  onChangeUserId(e) {\n    const userId = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          userId: userId,\n        },\n      };\n    });\n  }\n\n  onChangebody(e) {\n    const body = e.target.value;\n\n    this.setState((prevState) => ({\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        body: body,\n      },\n    }));\n  }\n\n  getTutorial(id) {\n    TutorialDataService.get(id)\n      .then((response) => {\n        this.setState({\n          currentTutorial: response.data,\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  updateStatus(status) {\n    var data = {\n      id: this.state.currentTutorial.id,\n      title: this.state.currentTutorial.title,\n      body: this.state.currentTutorial.body,\n      published: status,\n    };\n\n    this.props\n      .updateTutorial(this.state.currentTutorial.id, data)\n      .then((reponse) => {\n        console.log(reponse);\n\n        this.setState((prevState) => ({\n          currentTutorial: {\n            ...prevState.currentTutorial,\n            published: status,\n          },\n        }));\n\n        this.setState({ message: \"The status was updated successfully!\" });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  updateContent() {\n    this.props\n      .updateTutorial(this.state.currentTutorial.id, this.state.currentTutorial)\n      .then((reponse) => {\n        console.log(reponse);\n        \n        this.setState({ message: \"The tutorial was updated successfully!\" });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentTutorial } = this.state;\n\n    return (\n      <div>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n            <h4>Tutorial Post Update</h4>\n            <form>\n            <div className=\"form-group\">\n                <label htmlFor=\"userId\">user Id</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id=\"userId\"\n                  value={currentTutorial.userId}\n                  onChange={this.onChangeUserId}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.title}\n                  onChange={this.onChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"body\">body</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"body\"\n                  value={currentTutorial.body}\n                  onChange={this.onChangebody}\n                />\n              </div>\n            </form>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateContent}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Tutorial...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { updateTutorial})(Tutorial);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  retrieveTutorials,\n} from \"../actions/tutorials\";\nimport { Link } from \"react-router-dom\";\nimport './list.css'\n\nclass TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshData = this.refreshData.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n\n    this.state = {\n      currentTutorial: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.retrieveTutorials();\n  }\n\n  refreshData() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  render() {\n    const { searchTitle, currentTutorial, currentIndex } = this.state;\n    const { tutorials } = this.props;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6 containers\">\n          <h4>Tutorials Post List</h4>\n          <table className=\"container\">\n                <tr>\n                    <th>userId</th>\n                    <th>Title</th>\n                    <th>Descriptions</th>\n                </tr>\n                {tutorials &&\n                    tutorials.map((tutorial, index) => ( \n                    <tr>\n                      <td>{tutorial.userId}</td>\n                      <td>{tutorial.title}</td>\n                      <td>{tutorial.body}</td>\n                    </tr>\n                 ))}\n            </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tutorials: state.tutorials,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  retrieveTutorials,\n})(TutorialsList);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport Tutorial from \"./components/tutorialUpdate.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/list\"} className=\"nav-link\">\n              Post\n            </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/create\"} className=\"nav-link\">\n                Add List\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/update/1\"} className=\"nav-link\">\n                Update\n              </Link>\n            </li>\n            {/* <li className=\"nav-item\">\n              <Link to={\"/tutorials\"} className=\"nav-link\">\n                Tutorials\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li> */}\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/list\"]} component={TutorialsList} />\n            <Route exact path=\"/create\" component={AddTutorial} />\n            <Route path=\"/update/:id\" component={Tutorial} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import {\n  CREATE_TUTORIAL,\n  RETRIEVE_TUTORIALS,\n  UPDATE_TUTORIAL,\n} from \"../actions/types\";\n\nconst initialState = [];\n\nfunction tutorialReducer(tutorials = initialState, action) {\n  console.log('ac', action)\n  // debugger\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_TUTORIAL:\n      return [...tutorials, payload];\n\n    case RETRIEVE_TUTORIALS:\n      return payload;\n\n    case UPDATE_TUTORIAL:\n      return tutorials.map((tutorial) => {\n        if (tutorial.id === payload.id) {\n          return {\n            ...tutorial,\n            ...payload,\n          };\n        } else {\n          return tutorial;\n        }\n      });\n\n    default:\n      return tutorials;\n  }\n};\n\nexport default tutorialReducer;","import { combineReducers } from \"redux\";\nimport tutorials from \"./tutorials\";\n\nexport default combineReducers({\n  tutorials,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}